package com.sjl.bookmark.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sjl.bookmark.entity.table.Account;
import com.sjl.bookmark.entity.table.Bookmark;
import com.sjl.bookmark.entity.table.BrowseTrack;
import com.sjl.bookmark.entity.table.Collection;
import com.sjl.bookmark.entity.table.HistoryExpress;
import com.sjl.bookmark.entity.zhuishu.table.BookChapter;
import com.sjl.bookmark.entity.zhuishu.table.BookRecord;
import com.sjl.bookmark.entity.zhuishu.table.CollectBook;
import com.sjl.bookmark.entity.zhuishu.table.RecommendBook;

import com.sjl.bookmark.dao.AccountDao;
import com.sjl.bookmark.dao.BookmarkDao;
import com.sjl.bookmark.dao.BrowseTrackDao;
import com.sjl.bookmark.dao.CollectionDao;
import com.sjl.bookmark.dao.HistoryExpressDao;
import com.sjl.bookmark.dao.BookChapterDao;
import com.sjl.bookmark.dao.BookRecordDao;
import com.sjl.bookmark.dao.CollectBookDao;
import com.sjl.bookmark.dao.RecommendBookDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig bookmarkDaoConfig;
    private final DaoConfig browseTrackDaoConfig;
    private final DaoConfig collectionDaoConfig;
    private final DaoConfig historyExpressDaoConfig;
    private final DaoConfig bookChapterDaoConfig;
    private final DaoConfig bookRecordDaoConfig;
    private final DaoConfig collectBookDaoConfig;
    private final DaoConfig recommendBookDaoConfig;

    private final AccountDao accountDao;
    private final BookmarkDao bookmarkDao;
    private final BrowseTrackDao browseTrackDao;
    private final CollectionDao collectionDao;
    private final HistoryExpressDao historyExpressDao;
    private final BookChapterDao bookChapterDao;
    private final BookRecordDao bookRecordDao;
    private final CollectBookDao collectBookDao;
    private final RecommendBookDao recommendBookDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        bookmarkDaoConfig = daoConfigMap.get(BookmarkDao.class).clone();
        bookmarkDaoConfig.initIdentityScope(type);

        browseTrackDaoConfig = daoConfigMap.get(BrowseTrackDao.class).clone();
        browseTrackDaoConfig.initIdentityScope(type);

        collectionDaoConfig = daoConfigMap.get(CollectionDao.class).clone();
        collectionDaoConfig.initIdentityScope(type);

        historyExpressDaoConfig = daoConfigMap.get(HistoryExpressDao.class).clone();
        historyExpressDaoConfig.initIdentityScope(type);

        bookChapterDaoConfig = daoConfigMap.get(BookChapterDao.class).clone();
        bookChapterDaoConfig.initIdentityScope(type);

        bookRecordDaoConfig = daoConfigMap.get(BookRecordDao.class).clone();
        bookRecordDaoConfig.initIdentityScope(type);

        collectBookDaoConfig = daoConfigMap.get(CollectBookDao.class).clone();
        collectBookDaoConfig.initIdentityScope(type);

        recommendBookDaoConfig = daoConfigMap.get(RecommendBookDao.class).clone();
        recommendBookDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        bookmarkDao = new BookmarkDao(bookmarkDaoConfig, this);
        browseTrackDao = new BrowseTrackDao(browseTrackDaoConfig, this);
        collectionDao = new CollectionDao(collectionDaoConfig, this);
        historyExpressDao = new HistoryExpressDao(historyExpressDaoConfig, this);
        bookChapterDao = new BookChapterDao(bookChapterDaoConfig, this);
        bookRecordDao = new BookRecordDao(bookRecordDaoConfig, this);
        collectBookDao = new CollectBookDao(collectBookDaoConfig, this);
        recommendBookDao = new RecommendBookDao(recommendBookDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(Bookmark.class, bookmarkDao);
        registerDao(BrowseTrack.class, browseTrackDao);
        registerDao(Collection.class, collectionDao);
        registerDao(HistoryExpress.class, historyExpressDao);
        registerDao(BookChapter.class, bookChapterDao);
        registerDao(BookRecord.class, bookRecordDao);
        registerDao(CollectBook.class, collectBookDao);
        registerDao(RecommendBook.class, recommendBookDao);
    }
    
    public void clear() {
        accountDaoConfig.clearIdentityScope();
        bookmarkDaoConfig.clearIdentityScope();
        browseTrackDaoConfig.clearIdentityScope();
        collectionDaoConfig.clearIdentityScope();
        historyExpressDaoConfig.clearIdentityScope();
        bookChapterDaoConfig.clearIdentityScope();
        bookRecordDaoConfig.clearIdentityScope();
        collectBookDaoConfig.clearIdentityScope();
        recommendBookDaoConfig.clearIdentityScope();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public BookmarkDao getBookmarkDao() {
        return bookmarkDao;
    }

    public BrowseTrackDao getBrowseTrackDao() {
        return browseTrackDao;
    }

    public CollectionDao getCollectionDao() {
        return collectionDao;
    }

    public HistoryExpressDao getHistoryExpressDao() {
        return historyExpressDao;
    }

    public BookChapterDao getBookChapterDao() {
        return bookChapterDao;
    }

    public BookRecordDao getBookRecordDao() {
        return bookRecordDao;
    }

    public CollectBookDao getCollectBookDao() {
        return collectBookDao;
    }

    public RecommendBookDao getRecommendBookDao() {
        return recommendBookDao;
    }

}
